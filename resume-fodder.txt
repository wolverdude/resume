
React, JSON-Schema, Python analytics tools (Jupyter/iPython, Pandas, Matplotlib, Numpy, Scipy, Scikit-Learn)
React, Rails, Node, Docker, Terraform, AWS (ECS, Lambda, Redshift), SQL, PostgreSQL, ERD, Python analytics tools
JavaScript, React, jQuery, Webpack, Ruby, Rails, SQL, HTML, CSS, Meraki, MacOS, Bash, AppleScript
I worked on the Platform team supporting multiple frontend applications for a ride-sharing and delivery service. I designed and built systems in Node.js and Python while also maintaining existing PHP code.


Develop software in an Agile/Scrum workflow
Write and implement user stories
Document data architecture
Implement analytics dashboards using Python, Jupyter, Pandas, etc.
Build & maintain dashboard infrastructure using Terraform & AWS ECS
Consult with other departments to run statistical analyses

Manage and train a remote team of 7-10 interviewers and 4-5 reviewers
Manage the day-to-day admissions process, addressing any hangups or outliers
Use data to analyze the effectiveness of current processes, suggest improvements, and validate changes
Coordinate between different admissions stakeholders: admissions, marketing, sales, instructional, and leadership
Create and maintain a flexible rubric system built using JSON-Schema and React
Build & maintain a Python-based analytics toolset (Reticle)

Hands-on instruction
Lecturing
Mentoring students
Improving curriculum
Network and hardware management

A zero-latency payment pre-authorization system (Node.js)
A programmable simulator for testing complex client-server interactions spanning multiple systems (Node.js, Mocha.js, isomorphic JavaScript)
A real-time monitoring system that halved the downtime of a critical server (Tornado)
Chief architect of the company's next-generation server, which included a public API for delivery customers and an idempotent testing infrastructure with transaction powered database cleanup (Pyramid, SQLAlchemy, UnitTest)
